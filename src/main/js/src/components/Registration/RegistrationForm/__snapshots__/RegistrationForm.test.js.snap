// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<RegistrationForm /> should render registration form 1`] = `
<registrationForm
  initData={
    Object {
      "user": Object {
        "first_name": "Carl-Erik",
        "last_name": "Parkkonen-Testi",
        "nationalities": Array [
          "246",
        ],
        "nick_name": null,
        "post_office": "HELSINKI",
        "ssn": "260553-959D",
        "street_address": "Ateläniitynpolku 29 G",
        "zip": "00100",
      },
    }
  }
  onSubmitRegistrationForm={[MockFunction]}
  submitting={false}
  t={[Function]}
>
  <Formik
    enableReinitialize={false}
    initialValues={
      Object {
        "certificateLang": "fi",
        "email": "",
        "examLang": "fi",
        "firstName": "Carl-Erik",
        "lastName": "Parkkonen-Testi",
        "phoneNumber": "",
        "postOffice": "HELSINKI",
        "streetAddress": "Ateläniitynpolku 29 G",
        "zip": "00100",
      }
    }
    isInitialValid={false}
    onSubmit={[Function]}
    render={[Function]}
    validateOnBlur={true}
    validateOnChange={true}
    validationSchema={
      ObjectSchema {
        "_blacklist": RefSet {
          "list": Set {},
          "refs": Map {},
        },
        "_conditions": Array [],
        "_defaultDefault": [Function],
        "_deps": Array [],
        "_excludedEdges": Array [],
        "_exclusive": Object {},
        "_mutate": false,
        "_nodes": Array [
          "certificateLang",
          "examLang",
          "email",
          "phoneNumber",
          "postOffice",
          "zip",
          "streetAddress",
          "lastName",
          "firstName",
        ],
        "_options": Object {
          "abortEarly": true,
          "recursive": true,
        },
        "_type": "object",
        "_typeError": [Function],
        "_whitelist": RefSet {
          "list": Set {},
          "refs": Map {},
        },
        "fields": Object {
          "certificateLang": StringSchema {
            "_blacklist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "_conditions": Array [],
            "_deps": Array [],
            "_exclusive": Object {
              "required": false,
            },
            "_mutate": false,
            "_options": Object {
              "abortEarly": true,
              "recursive": true,
            },
            "_type": "string",
            "_typeError": [Function],
            "_whitelist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "tests": Array [
              [Function],
              [Function],
            ],
            "transforms": Array [
              [Function],
            ],
          },
          "email": StringSchema {
            "_blacklist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "_conditions": Array [],
            "_deps": Array [],
            "_exclusive": Object {
              "required": false,
              "undefined": false,
            },
            "_mutate": false,
            "_options": Object {
              "abortEarly": true,
              "recursive": true,
            },
            "_type": "string",
            "_typeError": [Function],
            "_whitelist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "tests": Array [
              [Function],
              [Function],
              [Function],
            ],
            "transforms": Array [
              [Function],
            ],
          },
          "examLang": StringSchema {
            "_blacklist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "_conditions": Array [],
            "_deps": Array [],
            "_exclusive": Object {
              "required": false,
            },
            "_mutate": false,
            "_options": Object {
              "abortEarly": true,
              "recursive": true,
            },
            "_type": "string",
            "_typeError": [Function],
            "_whitelist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "tests": Array [
              [Function],
              [Function],
            ],
            "transforms": Array [
              [Function],
            ],
          },
          "firstName": StringSchema {
            "_blacklist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "_conditions": Array [],
            "_deps": Array [],
            "_exclusive": Object {
              "required": false,
            },
            "_mutate": false,
            "_options": Object {
              "abortEarly": true,
              "recursive": true,
            },
            "_type": "string",
            "_typeError": [Function],
            "_whitelist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "tests": Array [
              [Function],
              [Function],
            ],
            "transforms": Array [
              [Function],
            ],
          },
          "lastName": StringSchema {
            "_blacklist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "_conditions": Array [],
            "_deps": Array [],
            "_exclusive": Object {
              "required": false,
            },
            "_mutate": false,
            "_options": Object {
              "abortEarly": true,
              "recursive": true,
            },
            "_type": "string",
            "_typeError": [Function],
            "_whitelist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "tests": Array [
              [Function],
              [Function],
            ],
            "transforms": Array [
              [Function],
            ],
          },
          "phoneNumber": StringSchema {
            "_blacklist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "_conditions": Array [],
            "_deps": Array [],
            "_exclusive": Object {
              "invalid-phone-number": false,
              "required": false,
            },
            "_mutate": false,
            "_options": Object {
              "abortEarly": true,
              "recursive": true,
            },
            "_type": "string",
            "_typeError": [Function],
            "_whitelist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "tests": Array [
              [Function],
              [Function],
              [Function],
            ],
            "transforms": Array [
              [Function],
            ],
          },
          "postOffice": StringSchema {
            "_blacklist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "_conditions": Array [],
            "_deps": Array [],
            "_exclusive": Object {
              "required": false,
            },
            "_mutate": false,
            "_options": Object {
              "abortEarly": true,
              "recursive": true,
            },
            "_type": "string",
            "_typeError": [Function],
            "_whitelist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "tests": Array [
              [Function],
              [Function],
            ],
            "transforms": Array [
              [Function],
            ],
          },
          "streetAddress": StringSchema {
            "_blacklist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "_conditions": Array [],
            "_deps": Array [],
            "_exclusive": Object {
              "required": false,
            },
            "_mutate": false,
            "_options": Object {
              "abortEarly": true,
              "recursive": true,
            },
            "_type": "string",
            "_typeError": [Function],
            "_whitelist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "tests": Array [
              [Function],
              [Function],
            ],
            "transforms": Array [
              [Function],
            ],
          },
          "zip": StringSchema {
            "_blacklist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "_conditions": Array [],
            "_deps": Array [],
            "_exclusive": Object {
              "required": false,
            },
            "_mutate": false,
            "_options": Object {
              "abortEarly": true,
              "recursive": true,
            },
            "_type": "string",
            "_typeError": [Function],
            "_whitelist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "tests": Array [
              [Function],
              [Function],
            ],
            "transforms": Array [
              [Function],
            ],
          },
        },
        "tests": Array [],
        "transforms": Array [
          [Function],
        ],
      }
    }
  >
    <Form
      className="Form"
    >
      <Component
        className="Form"
        formik={
          Object {
            "dirty": false,
            "errors": Object {},
            "handleBlur": [Function],
            "handleChange": [Function],
            "handleReset": [Function],
            "handleSubmit": [Function],
            "initialValues": Object {
              "certificateLang": "fi",
              "email": "",
              "examLang": "fi",
              "firstName": "Carl-Erik",
              "lastName": "Parkkonen-Testi",
              "phoneNumber": "",
              "postOffice": "HELSINKI",
              "streetAddress": "Ateläniitynpolku 29 G",
              "zip": "00100",
            },
            "isSubmitting": false,
            "isValid": false,
            "isValidating": false,
            "registerField": [Function],
            "resetForm": [Function],
            "setError": [Function],
            "setErrors": [Function],
            "setFieldError": [Function],
            "setFieldTouched": [Function],
            "setFieldValue": [Function],
            "setFormikState": [Function],
            "setStatus": [Function],
            "setSubmitting": [Function],
            "setTouched": [Function],
            "setValues": [Function],
            "submitCount": 0,
            "submitForm": [Function],
            "touched": Object {},
            "unregisterField": [Function],
            "validate": undefined,
            "validateField": [Function],
            "validateForm": [Function],
            "validateOnBlur": true,
            "validateOnChange": true,
            "validationSchema": ObjectSchema {
              "_blacklist": RefSet {
                "list": Set {},
                "refs": Map {},
              },
              "_conditions": Array [],
              "_defaultDefault": [Function],
              "_deps": Array [],
              "_excludedEdges": Array [],
              "_exclusive": Object {},
              "_mutate": false,
              "_nodes": Array [
                "certificateLang",
                "examLang",
                "email",
                "phoneNumber",
                "postOffice",
                "zip",
                "streetAddress",
                "lastName",
                "firstName",
              ],
              "_options": Object {
                "abortEarly": true,
                "recursive": true,
              },
              "_type": "object",
              "_typeError": [Function],
              "_whitelist": RefSet {
                "list": Set {},
                "refs": Map {},
              },
              "fields": Object {
                "certificateLang": StringSchema {
                  "_blacklist": RefSet {
                    "list": Set {},
                    "refs": Map {},
                  },
                  "_conditions": Array [],
                  "_deps": Array [],
                  "_exclusive": Object {
                    "required": false,
                  },
                  "_mutate": false,
                  "_options": Object {
                    "abortEarly": true,
                    "recursive": true,
                  },
                  "_type": "string",
                  "_typeError": [Function],
                  "_whitelist": RefSet {
                    "list": Set {},
                    "refs": Map {},
                  },
                  "tests": Array [
                    [Function],
                    [Function],
                  ],
                  "transforms": Array [
                    [Function],
                  ],
                },
                "email": StringSchema {
                  "_blacklist": RefSet {
                    "list": Set {},
                    "refs": Map {},
                  },
                  "_conditions": Array [],
                  "_deps": Array [],
                  "_exclusive": Object {
                    "required": false,
                    "undefined": false,
                  },
                  "_mutate": false,
                  "_options": Object {
                    "abortEarly": true,
                    "recursive": true,
                  },
                  "_type": "string",
                  "_typeError": [Function],
                  "_whitelist": RefSet {
                    "list": Set {},
                    "refs": Map {},
                  },
                  "tests": Array [
                    [Function],
                    [Function],
                    [Function],
                  ],
                  "transforms": Array [
                    [Function],
                  ],
                },
                "examLang": StringSchema {
                  "_blacklist": RefSet {
                    "list": Set {},
                    "refs": Map {},
                  },
                  "_conditions": Array [],
                  "_deps": Array [],
                  "_exclusive": Object {
                    "required": false,
                  },
                  "_mutate": false,
                  "_options": Object {
                    "abortEarly": true,
                    "recursive": true,
                  },
                  "_type": "string",
                  "_typeError": [Function],
                  "_whitelist": RefSet {
                    "list": Set {},
                    "refs": Map {},
                  },
                  "tests": Array [
                    [Function],
                    [Function],
                  ],
                  "transforms": Array [
                    [Function],
                  ],
                },
                "firstName": StringSchema {
                  "_blacklist": RefSet {
                    "list": Set {},
                    "refs": Map {},
                  },
                  "_conditions": Array [],
                  "_deps": Array [],
                  "_exclusive": Object {
                    "required": false,
                  },
                  "_mutate": false,
                  "_options": Object {
                    "abortEarly": true,
                    "recursive": true,
                  },
                  "_type": "string",
                  "_typeError": [Function],
                  "_whitelist": RefSet {
                    "list": Set {},
                    "refs": Map {},
                  },
                  "tests": Array [
                    [Function],
                    [Function],
                  ],
                  "transforms": Array [
                    [Function],
                  ],
                },
                "lastName": StringSchema {
                  "_blacklist": RefSet {
                    "list": Set {},
                    "refs": Map {},
                  },
                  "_conditions": Array [],
                  "_deps": Array [],
                  "_exclusive": Object {
                    "required": false,
                  },
                  "_mutate": false,
                  "_options": Object {
                    "abortEarly": true,
                    "recursive": true,
                  },
                  "_type": "string",
                  "_typeError": [Function],
                  "_whitelist": RefSet {
                    "list": Set {},
                    "refs": Map {},
                  },
                  "tests": Array [
                    [Function],
                    [Function],
                  ],
                  "transforms": Array [
                    [Function],
                  ],
                },
                "phoneNumber": StringSchema {
                  "_blacklist": RefSet {
                    "list": Set {},
                    "refs": Map {},
                  },
                  "_conditions": Array [],
                  "_deps": Array [],
                  "_exclusive": Object {
                    "invalid-phone-number": false,
                    "required": false,
                  },
                  "_mutate": false,
                  "_options": Object {
                    "abortEarly": true,
                    "recursive": true,
                  },
                  "_type": "string",
                  "_typeError": [Function],
                  "_whitelist": RefSet {
                    "list": Set {},
                    "refs": Map {},
                  },
                  "tests": Array [
                    [Function],
                    [Function],
                    [Function],
                  ],
                  "transforms": Array [
                    [Function],
                  ],
                },
                "postOffice": StringSchema {
                  "_blacklist": RefSet {
                    "list": Set {},
                    "refs": Map {},
                  },
                  "_conditions": Array [],
                  "_deps": Array [],
                  "_exclusive": Object {
                    "required": false,
                  },
                  "_mutate": false,
                  "_options": Object {
                    "abortEarly": true,
                    "recursive": true,
                  },
                  "_type": "string",
                  "_typeError": [Function],
                  "_whitelist": RefSet {
                    "list": Set {},
                    "refs": Map {},
                  },
                  "tests": Array [
                    [Function],
                    [Function],
                  ],
                  "transforms": Array [
                    [Function],
                  ],
                },
                "streetAddress": StringSchema {
                  "_blacklist": RefSet {
                    "list": Set {},
                    "refs": Map {},
                  },
                  "_conditions": Array [],
                  "_deps": Array [],
                  "_exclusive": Object {
                    "required": false,
                  },
                  "_mutate": false,
                  "_options": Object {
                    "abortEarly": true,
                    "recursive": true,
                  },
                  "_type": "string",
                  "_typeError": [Function],
                  "_whitelist": RefSet {
                    "list": Set {},
                    "refs": Map {},
                  },
                  "tests": Array [
                    [Function],
                    [Function],
                  ],
                  "transforms": Array [
                    [Function],
                  ],
                },
                "zip": StringSchema {
                  "_blacklist": RefSet {
                    "list": Set {},
                    "refs": Map {},
                  },
                  "_conditions": Array [],
                  "_deps": Array [],
                  "_exclusive": Object {
                    "required": false,
                  },
                  "_mutate": false,
                  "_options": Object {
                    "abortEarly": true,
                    "recursive": true,
                  },
                  "_type": "string",
                  "_typeError": [Function],
                  "_whitelist": RefSet {
                    "list": Set {},
                    "refs": Map {},
                  },
                  "tests": Array [
                    [Function],
                    [Function],
                  ],
                  "transforms": Array [
                    [Function],
                  ],
                },
              },
              "tests": Array [],
              "transforms": Array [
                [Function],
              ],
            },
            "values": Object {
              "certificateLang": "fi",
              "email": "",
              "examLang": "fi",
              "firstName": "Carl-Erik",
              "lastName": "Parkkonen-Testi",
              "phoneNumber": "",
              "postOffice": "HELSINKI",
              "streetAddress": "Ateläniitynpolku 29 G",
              "zip": "00100",
            },
          }
        }
      >
        <form
          className="Form"
          onReset={[Function]}
          onSubmit={[Function]}
        >
          <div
            data-cy="registration-form"
          >
            <p>
              registration.form.info
            </p>
            <div
              className="FormElement"
            >
              <h3>
                registration.form.firstName
              </h3>
              <span>
                Carl-Erik
              </span>
            </div>
            <div
              className="FormElement"
            >
              <h3>
                registration.form.lastName
              </h3>
              <span>
                Parkkonen-Testi
              </span>
            </div>
            <div
              className="FormElement"
            >
              <h3>
                registration.form.streetAddress
              </h3>
              <span>
                Ateläniitynpolku 29 G
              </span>
            </div>
            <div
              className="FormElement"
            >
              <h3>
                registration.form.zip
              </h3>
              <span>
                00100
              </span>
               
              <span>
                HELSINKI
              </span>
            </div>
            <div
              className="FormElement"
            >
              <h3>
                registration.form.phoneNumber
              </h3>
              <FormikConnect(FieldInner)
                className="TextInput"
                data-cy="input-phoneNumber"
                name="phoneNumber"
                placeholder="+358 40 123 4567"
              >
                <FieldInner
                  className="TextInput"
                  data-cy="input-phoneNumber"
                  formik={
                    Object {
                      "dirty": false,
                      "errors": Object {},
                      "handleBlur": [Function],
                      "handleChange": [Function],
                      "handleReset": [Function],
                      "handleSubmit": [Function],
                      "initialValues": Object {
                        "certificateLang": "fi",
                        "email": "",
                        "examLang": "fi",
                        "firstName": "Carl-Erik",
                        "lastName": "Parkkonen-Testi",
                        "phoneNumber": "",
                        "postOffice": "HELSINKI",
                        "streetAddress": "Ateläniitynpolku 29 G",
                        "zip": "00100",
                      },
                      "isSubmitting": false,
                      "isValid": false,
                      "isValidating": false,
                      "registerField": [Function],
                      "resetForm": [Function],
                      "setError": [Function],
                      "setErrors": [Function],
                      "setFieldError": [Function],
                      "setFieldTouched": [Function],
                      "setFieldValue": [Function],
                      "setFormikState": [Function],
                      "setStatus": [Function],
                      "setSubmitting": [Function],
                      "setTouched": [Function],
                      "setValues": [Function],
                      "submitCount": 0,
                      "submitForm": [Function],
                      "touched": Object {},
                      "unregisterField": [Function],
                      "validate": undefined,
                      "validateField": [Function],
                      "validateForm": [Function],
                      "validateOnBlur": true,
                      "validateOnChange": true,
                      "validationSchema": ObjectSchema {
                        "_blacklist": RefSet {
                          "list": Set {},
                          "refs": Map {},
                        },
                        "_conditions": Array [],
                        "_defaultDefault": [Function],
                        "_deps": Array [],
                        "_excludedEdges": Array [],
                        "_exclusive": Object {},
                        "_mutate": false,
                        "_nodes": Array [
                          "certificateLang",
                          "examLang",
                          "email",
                          "phoneNumber",
                          "postOffice",
                          "zip",
                          "streetAddress",
                          "lastName",
                          "firstName",
                        ],
                        "_options": Object {
                          "abortEarly": true,
                          "recursive": true,
                        },
                        "_type": "object",
                        "_typeError": [Function],
                        "_whitelist": RefSet {
                          "list": Set {},
                          "refs": Map {},
                        },
                        "fields": Object {
                          "certificateLang": StringSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_deps": Array [],
                            "_exclusive": Object {
                              "required": false,
                            },
                            "_mutate": false,
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "string",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "tests": Array [
                              [Function],
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "email": StringSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_deps": Array [],
                            "_exclusive": Object {
                              "required": false,
                              "undefined": false,
                            },
                            "_mutate": false,
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "string",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "tests": Array [
                              [Function],
                              [Function],
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "examLang": StringSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_deps": Array [],
                            "_exclusive": Object {
                              "required": false,
                            },
                            "_mutate": false,
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "string",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "tests": Array [
                              [Function],
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "firstName": StringSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_deps": Array [],
                            "_exclusive": Object {
                              "required": false,
                            },
                            "_mutate": false,
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "string",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "tests": Array [
                              [Function],
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "lastName": StringSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_deps": Array [],
                            "_exclusive": Object {
                              "required": false,
                            },
                            "_mutate": false,
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "string",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "tests": Array [
                              [Function],
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "phoneNumber": StringSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_deps": Array [],
                            "_exclusive": Object {
                              "invalid-phone-number": false,
                              "required": false,
                            },
                            "_mutate": false,
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "string",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "tests": Array [
                              [Function],
                              [Function],
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "postOffice": StringSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_deps": Array [],
                            "_exclusive": Object {
                              "required": false,
                            },
                            "_mutate": false,
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "string",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "tests": Array [
                              [Function],
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "streetAddress": StringSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_deps": Array [],
                            "_exclusive": Object {
                              "required": false,
                            },
                            "_mutate": false,
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "string",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "tests": Array [
                              [Function],
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "zip": StringSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_deps": Array [],
                            "_exclusive": Object {
                              "required": false,
                            },
                            "_mutate": false,
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "string",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "tests": Array [
                              [Function],
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                        },
                        "tests": Array [],
                        "transforms": Array [
                          [Function],
                        ],
                      },
                      "values": Object {
                        "certificateLang": "fi",
                        "email": "",
                        "examLang": "fi",
                        "firstName": "Carl-Erik",
                        "lastName": "Parkkonen-Testi",
                        "phoneNumber": "",
                        "postOffice": "HELSINKI",
                        "streetAddress": "Ateläniitynpolku 29 G",
                        "zip": "00100",
                      },
                    }
                  }
                  name="phoneNumber"
                  placeholder="+358 40 123 4567"
                >
                  <input
                    className="TextInput"
                    data-cy="input-phoneNumber"
                    name="phoneNumber"
                    onBlur={[Function]}
                    onChange={[Function]}
                    placeholder="+358 40 123 4567"
                    value=""
                  />
                </FieldInner>
              </FormikConnect(FieldInner)>
              <FormikConnect(ErrorMessageImpl)
                className="ErrorMessage"
                component="span"
                name="phoneNumber"
              >
                <ErrorMessageImpl
                  className="ErrorMessage"
                  component="span"
                  formik={
                    Object {
                      "dirty": false,
                      "errors": Object {},
                      "handleBlur": [Function],
                      "handleChange": [Function],
                      "handleReset": [Function],
                      "handleSubmit": [Function],
                      "initialValues": Object {
                        "certificateLang": "fi",
                        "email": "",
                        "examLang": "fi",
                        "firstName": "Carl-Erik",
                        "lastName": "Parkkonen-Testi",
                        "phoneNumber": "",
                        "postOffice": "HELSINKI",
                        "streetAddress": "Ateläniitynpolku 29 G",
                        "zip": "00100",
                      },
                      "isSubmitting": false,
                      "isValid": false,
                      "isValidating": false,
                      "registerField": [Function],
                      "resetForm": [Function],
                      "setError": [Function],
                      "setErrors": [Function],
                      "setFieldError": [Function],
                      "setFieldTouched": [Function],
                      "setFieldValue": [Function],
                      "setFormikState": [Function],
                      "setStatus": [Function],
                      "setSubmitting": [Function],
                      "setTouched": [Function],
                      "setValues": [Function],
                      "submitCount": 0,
                      "submitForm": [Function],
                      "touched": Object {},
                      "unregisterField": [Function],
                      "validate": undefined,
                      "validateField": [Function],
                      "validateForm": [Function],
                      "validateOnBlur": true,
                      "validateOnChange": true,
                      "validationSchema": ObjectSchema {
                        "_blacklist": RefSet {
                          "list": Set {},
                          "refs": Map {},
                        },
                        "_conditions": Array [],
                        "_defaultDefault": [Function],
                        "_deps": Array [],
                        "_excludedEdges": Array [],
                        "_exclusive": Object {},
                        "_mutate": false,
                        "_nodes": Array [
                          "certificateLang",
                          "examLang",
                          "email",
                          "phoneNumber",
                          "postOffice",
                          "zip",
                          "streetAddress",
                          "lastName",
                          "firstName",
                        ],
                        "_options": Object {
                          "abortEarly": true,
                          "recursive": true,
                        },
                        "_type": "object",
                        "_typeError": [Function],
                        "_whitelist": RefSet {
                          "list": Set {},
                          "refs": Map {},
                        },
                        "fields": Object {
                          "certificateLang": StringSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_deps": Array [],
                            "_exclusive": Object {
                              "required": false,
                            },
                            "_mutate": false,
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "string",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "tests": Array [
                              [Function],
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "email": StringSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_deps": Array [],
                            "_exclusive": Object {
                              "required": false,
                              "undefined": false,
                            },
                            "_mutate": false,
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "string",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "tests": Array [
                              [Function],
                              [Function],
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "examLang": StringSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_deps": Array [],
                            "_exclusive": Object {
                              "required": false,
                            },
                            "_mutate": false,
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "string",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "tests": Array [
                              [Function],
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "firstName": StringSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_deps": Array [],
                            "_exclusive": Object {
                              "required": false,
                            },
                            "_mutate": false,
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "string",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "tests": Array [
                              [Function],
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "lastName": StringSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_deps": Array [],
                            "_exclusive": Object {
                              "required": false,
                            },
                            "_mutate": false,
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "string",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "tests": Array [
                              [Function],
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "phoneNumber": StringSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_deps": Array [],
                            "_exclusive": Object {
                              "invalid-phone-number": false,
                              "required": false,
                            },
                            "_mutate": false,
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "string",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "tests": Array [
                              [Function],
                              [Function],
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "postOffice": StringSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_deps": Array [],
                            "_exclusive": Object {
                              "required": false,
                            },
                            "_mutate": false,
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "string",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "tests": Array [
                              [Function],
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "streetAddress": StringSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_deps": Array [],
                            "_exclusive": Object {
                              "required": false,
                            },
                            "_mutate": false,
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "string",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "tests": Array [
                              [Function],
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "zip": StringSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_deps": Array [],
                            "_exclusive": Object {
                              "required": false,
                            },
                            "_mutate": false,
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "string",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "tests": Array [
                              [Function],
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                        },
                        "tests": Array [],
                        "transforms": Array [
                          [Function],
                        ],
                      },
                      "values": Object {
                        "certificateLang": "fi",
                        "email": "",
                        "examLang": "fi",
                        "firstName": "Carl-Erik",
                        "lastName": "Parkkonen-Testi",
                        "phoneNumber": "",
                        "postOffice": "HELSINKI",
                        "streetAddress": "Ateläniitynpolku 29 G",
                        "zip": "00100",
                      },
                    }
                  }
                  name="phoneNumber"
                />
              </FormikConnect(ErrorMessageImpl)>
            </div>
            <div
              className="FormElement"
            >
              <h3>
                registration.form.email
              </h3>
              <FormikConnect(FieldInner)
                className="TextInput"
                data-cy="input-email"
                name="email"
                placeholder=""
              >
                <FieldInner
                  className="TextInput"
                  data-cy="input-email"
                  formik={
                    Object {
                      "dirty": false,
                      "errors": Object {},
                      "handleBlur": [Function],
                      "handleChange": [Function],
                      "handleReset": [Function],
                      "handleSubmit": [Function],
                      "initialValues": Object {
                        "certificateLang": "fi",
                        "email": "",
                        "examLang": "fi",
                        "firstName": "Carl-Erik",
                        "lastName": "Parkkonen-Testi",
                        "phoneNumber": "",
                        "postOffice": "HELSINKI",
                        "streetAddress": "Ateläniitynpolku 29 G",
                        "zip": "00100",
                      },
                      "isSubmitting": false,
                      "isValid": false,
                      "isValidating": false,
                      "registerField": [Function],
                      "resetForm": [Function],
                      "setError": [Function],
                      "setErrors": [Function],
                      "setFieldError": [Function],
                      "setFieldTouched": [Function],
                      "setFieldValue": [Function],
                      "setFormikState": [Function],
                      "setStatus": [Function],
                      "setSubmitting": [Function],
                      "setTouched": [Function],
                      "setValues": [Function],
                      "submitCount": 0,
                      "submitForm": [Function],
                      "touched": Object {},
                      "unregisterField": [Function],
                      "validate": undefined,
                      "validateField": [Function],
                      "validateForm": [Function],
                      "validateOnBlur": true,
                      "validateOnChange": true,
                      "validationSchema": ObjectSchema {
                        "_blacklist": RefSet {
                          "list": Set {},
                          "refs": Map {},
                        },
                        "_conditions": Array [],
                        "_defaultDefault": [Function],
                        "_deps": Array [],
                        "_excludedEdges": Array [],
                        "_exclusive": Object {},
                        "_mutate": false,
                        "_nodes": Array [
                          "certificateLang",
                          "examLang",
                          "email",
                          "phoneNumber",
                          "postOffice",
                          "zip",
                          "streetAddress",
                          "lastName",
                          "firstName",
                        ],
                        "_options": Object {
                          "abortEarly": true,
                          "recursive": true,
                        },
                        "_type": "object",
                        "_typeError": [Function],
                        "_whitelist": RefSet {
                          "list": Set {},
                          "refs": Map {},
                        },
                        "fields": Object {
                          "certificateLang": StringSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_deps": Array [],
                            "_exclusive": Object {
                              "required": false,
                            },
                            "_mutate": false,
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "string",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "tests": Array [
                              [Function],
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "email": StringSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_deps": Array [],
                            "_exclusive": Object {
                              "required": false,
                              "undefined": false,
                            },
                            "_mutate": false,
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "string",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "tests": Array [
                              [Function],
                              [Function],
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "examLang": StringSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_deps": Array [],
                            "_exclusive": Object {
                              "required": false,
                            },
                            "_mutate": false,
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "string",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "tests": Array [
                              [Function],
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "firstName": StringSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_deps": Array [],
                            "_exclusive": Object {
                              "required": false,
                            },
                            "_mutate": false,
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "string",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "tests": Array [
                              [Function],
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "lastName": StringSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_deps": Array [],
                            "_exclusive": Object {
                              "required": false,
                            },
                            "_mutate": false,
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "string",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "tests": Array [
                              [Function],
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "phoneNumber": StringSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_deps": Array [],
                            "_exclusive": Object {
                              "invalid-phone-number": false,
                              "required": false,
                            },
                            "_mutate": false,
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "string",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "tests": Array [
                              [Function],
                              [Function],
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "postOffice": StringSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_deps": Array [],
                            "_exclusive": Object {
                              "required": false,
                            },
                            "_mutate": false,
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "string",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "tests": Array [
                              [Function],
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "streetAddress": StringSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_deps": Array [],
                            "_exclusive": Object {
                              "required": false,
                            },
                            "_mutate": false,
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "string",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "tests": Array [
                              [Function],
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "zip": StringSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_deps": Array [],
                            "_exclusive": Object {
                              "required": false,
                            },
                            "_mutate": false,
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "string",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "tests": Array [
                              [Function],
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                        },
                        "tests": Array [],
                        "transforms": Array [
                          [Function],
                        ],
                      },
                      "values": Object {
                        "certificateLang": "fi",
                        "email": "",
                        "examLang": "fi",
                        "firstName": "Carl-Erik",
                        "lastName": "Parkkonen-Testi",
                        "phoneNumber": "",
                        "postOffice": "HELSINKI",
                        "streetAddress": "Ateläniitynpolku 29 G",
                        "zip": "00100",
                      },
                    }
                  }
                  name="email"
                  placeholder=""
                >
                  <input
                    className="TextInput"
                    data-cy="input-email"
                    name="email"
                    onBlur={[Function]}
                    onChange={[Function]}
                    placeholder=""
                    value=""
                  />
                </FieldInner>
              </FormikConnect(FieldInner)>
              <FormikConnect(ErrorMessageImpl)
                className="ErrorMessage"
                component="span"
                name="email"
              >
                <ErrorMessageImpl
                  className="ErrorMessage"
                  component="span"
                  formik={
                    Object {
                      "dirty": false,
                      "errors": Object {},
                      "handleBlur": [Function],
                      "handleChange": [Function],
                      "handleReset": [Function],
                      "handleSubmit": [Function],
                      "initialValues": Object {
                        "certificateLang": "fi",
                        "email": "",
                        "examLang": "fi",
                        "firstName": "Carl-Erik",
                        "lastName": "Parkkonen-Testi",
                        "phoneNumber": "",
                        "postOffice": "HELSINKI",
                        "streetAddress": "Ateläniitynpolku 29 G",
                        "zip": "00100",
                      },
                      "isSubmitting": false,
                      "isValid": false,
                      "isValidating": false,
                      "registerField": [Function],
                      "resetForm": [Function],
                      "setError": [Function],
                      "setErrors": [Function],
                      "setFieldError": [Function],
                      "setFieldTouched": [Function],
                      "setFieldValue": [Function],
                      "setFormikState": [Function],
                      "setStatus": [Function],
                      "setSubmitting": [Function],
                      "setTouched": [Function],
                      "setValues": [Function],
                      "submitCount": 0,
                      "submitForm": [Function],
                      "touched": Object {},
                      "unregisterField": [Function],
                      "validate": undefined,
                      "validateField": [Function],
                      "validateForm": [Function],
                      "validateOnBlur": true,
                      "validateOnChange": true,
                      "validationSchema": ObjectSchema {
                        "_blacklist": RefSet {
                          "list": Set {},
                          "refs": Map {},
                        },
                        "_conditions": Array [],
                        "_defaultDefault": [Function],
                        "_deps": Array [],
                        "_excludedEdges": Array [],
                        "_exclusive": Object {},
                        "_mutate": false,
                        "_nodes": Array [
                          "certificateLang",
                          "examLang",
                          "email",
                          "phoneNumber",
                          "postOffice",
                          "zip",
                          "streetAddress",
                          "lastName",
                          "firstName",
                        ],
                        "_options": Object {
                          "abortEarly": true,
                          "recursive": true,
                        },
                        "_type": "object",
                        "_typeError": [Function],
                        "_whitelist": RefSet {
                          "list": Set {},
                          "refs": Map {},
                        },
                        "fields": Object {
                          "certificateLang": StringSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_deps": Array [],
                            "_exclusive": Object {
                              "required": false,
                            },
                            "_mutate": false,
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "string",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "tests": Array [
                              [Function],
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "email": StringSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_deps": Array [],
                            "_exclusive": Object {
                              "required": false,
                              "undefined": false,
                            },
                            "_mutate": false,
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "string",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "tests": Array [
                              [Function],
                              [Function],
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "examLang": StringSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_deps": Array [],
                            "_exclusive": Object {
                              "required": false,
                            },
                            "_mutate": false,
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "string",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "tests": Array [
                              [Function],
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "firstName": StringSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_deps": Array [],
                            "_exclusive": Object {
                              "required": false,
                            },
                            "_mutate": false,
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "string",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "tests": Array [
                              [Function],
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "lastName": StringSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_deps": Array [],
                            "_exclusive": Object {
                              "required": false,
                            },
                            "_mutate": false,
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "string",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "tests": Array [
                              [Function],
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "phoneNumber": StringSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_deps": Array [],
                            "_exclusive": Object {
                              "invalid-phone-number": false,
                              "required": false,
                            },
                            "_mutate": false,
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "string",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "tests": Array [
                              [Function],
                              [Function],
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "postOffice": StringSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_deps": Array [],
                            "_exclusive": Object {
                              "required": false,
                            },
                            "_mutate": false,
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "string",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "tests": Array [
                              [Function],
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "streetAddress": StringSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_deps": Array [],
                            "_exclusive": Object {
                              "required": false,
                            },
                            "_mutate": false,
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "string",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "tests": Array [
                              [Function],
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "zip": StringSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_deps": Array [],
                            "_exclusive": Object {
                              "required": false,
                            },
                            "_mutate": false,
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "string",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "tests": Array [
                              [Function],
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                        },
                        "tests": Array [],
                        "transforms": Array [
                          [Function],
                        ],
                      },
                      "values": Object {
                        "certificateLang": "fi",
                        "email": "",
                        "examLang": "fi",
                        "firstName": "Carl-Erik",
                        "lastName": "Parkkonen-Testi",
                        "phoneNumber": "",
                        "postOffice": "HELSINKI",
                        "streetAddress": "Ateläniitynpolku 29 G",
                        "zip": "00100",
                      },
                    }
                  }
                  name="email"
                />
              </FormikConnect(ErrorMessageImpl)>
            </div>
            <div
              className="FormElement RadiobuttonGroup"
            >
              <RadioButtonGroup
                label="registration.form.examLang"
                value="fi"
              >
                <div>
                  <h3>
                    registration.form.examLang
                  </h3>
                  <FormikConnect(FieldInner)
                    checkedValue="fi"
                    component={[Function]}
                    id="examLang-fi"
                    label="common.language.fin"
                    name="examLang"
                  >
                    <FieldInner
                      checkedValue="fi"
                      component={[Function]}
                      formik={
                        Object {
                          "dirty": false,
                          "errors": Object {},
                          "handleBlur": [Function],
                          "handleChange": [Function],
                          "handleReset": [Function],
                          "handleSubmit": [Function],
                          "initialValues": Object {
                            "certificateLang": "fi",
                            "email": "",
                            "examLang": "fi",
                            "firstName": "Carl-Erik",
                            "lastName": "Parkkonen-Testi",
                            "phoneNumber": "",
                            "postOffice": "HELSINKI",
                            "streetAddress": "Ateläniitynpolku 29 G",
                            "zip": "00100",
                          },
                          "isSubmitting": false,
                          "isValid": false,
                          "isValidating": false,
                          "registerField": [Function],
                          "resetForm": [Function],
                          "setError": [Function],
                          "setErrors": [Function],
                          "setFieldError": [Function],
                          "setFieldTouched": [Function],
                          "setFieldValue": [Function],
                          "setFormikState": [Function],
                          "setStatus": [Function],
                          "setSubmitting": [Function],
                          "setTouched": [Function],
                          "setValues": [Function],
                          "submitCount": 0,
                          "submitForm": [Function],
                          "touched": Object {},
                          "unregisterField": [Function],
                          "validate": undefined,
                          "validateField": [Function],
                          "validateForm": [Function],
                          "validateOnBlur": true,
                          "validateOnChange": true,
                          "validationSchema": ObjectSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_defaultDefault": [Function],
                            "_deps": Array [],
                            "_excludedEdges": Array [],
                            "_exclusive": Object {},
                            "_mutate": false,
                            "_nodes": Array [
                              "certificateLang",
                              "examLang",
                              "email",
                              "phoneNumber",
                              "postOffice",
                              "zip",
                              "streetAddress",
                              "lastName",
                              "firstName",
                            ],
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "object",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "fields": Object {
                              "certificateLang": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "email": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "required": false,
                                  "undefined": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "examLang": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "firstName": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "lastName": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "phoneNumber": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "invalid-phone-number": false,
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "postOffice": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "streetAddress": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "zip": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                            },
                            "tests": Array [],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "values": Object {
                            "certificateLang": "fi",
                            "email": "",
                            "examLang": "fi",
                            "firstName": "Carl-Erik",
                            "lastName": "Parkkonen-Testi",
                            "phoneNumber": "",
                            "postOffice": "HELSINKI",
                            "streetAddress": "Ateläniitynpolku 29 G",
                            "zip": "00100",
                          },
                        }
                      }
                      id="examLang-fi"
                      label="common.language.fin"
                      name="examLang"
                    >
                      <RadioButtonComponent
                        checkedValue="fi"
                        field={
                          Object {
                            "name": "examLang",
                            "onBlur": [Function],
                            "onChange": [Function],
                            "value": "fi",
                          }
                        }
                        form={
                          Object {
                            "dirty": false,
                            "errors": Object {},
                            "handleBlur": [Function],
                            "handleChange": [Function],
                            "handleReset": [Function],
                            "handleSubmit": [Function],
                            "initialValues": Object {
                              "certificateLang": "fi",
                              "email": "",
                              "examLang": "fi",
                              "firstName": "Carl-Erik",
                              "lastName": "Parkkonen-Testi",
                              "phoneNumber": "",
                              "postOffice": "HELSINKI",
                              "streetAddress": "Ateläniitynpolku 29 G",
                              "zip": "00100",
                            },
                            "isSubmitting": false,
                            "isValid": false,
                            "isValidating": false,
                            "registerField": [Function],
                            "resetForm": [Function],
                            "setError": [Function],
                            "setErrors": [Function],
                            "setFieldError": [Function],
                            "setFieldTouched": [Function],
                            "setFieldValue": [Function],
                            "setFormikState": [Function],
                            "setStatus": [Function],
                            "setSubmitting": [Function],
                            "setTouched": [Function],
                            "setValues": [Function],
                            "submitCount": 0,
                            "submitForm": [Function],
                            "touched": Object {},
                            "unregisterField": [Function],
                            "validateField": [Function],
                            "validateForm": [Function],
                            "validateOnBlur": true,
                            "validateOnChange": true,
                            "values": Object {
                              "certificateLang": "fi",
                              "email": "",
                              "examLang": "fi",
                              "firstName": "Carl-Erik",
                              "lastName": "Parkkonen-Testi",
                              "phoneNumber": "",
                              "postOffice": "HELSINKI",
                              "streetAddress": "Ateläniitynpolku 29 G",
                              "zip": "00100",
                            },
                          }
                        }
                        id="examLang-fi"
                        label="common.language.fin"
                      >
                        <radioButton
                          checkedValue="fi"
                          id="examLang-fi"
                          label="common.language.fin"
                          name="examLang"
                          onChange={[Function]}
                          value="fi"
                        >
                          <div
                            className="RadioButton "
                          >
                            <input
                              checked={true}
                              data-cy="radio-examLang-fi"
                              disabled={false}
                              id="examLang-fi"
                              name="examLang"
                              onChange={[Function]}
                              type="radio"
                              value="fi"
                            />
                            <label
                              className="RadioButtonLabel"
                              htmlFor="examLang-fi"
                            >
                              common.language.fin
                            </label>
                          </div>
                        </radioButton>
                      </RadioButtonComponent>
                    </FieldInner>
                  </FormikConnect(FieldInner)>
                  <FormikConnect(FieldInner)
                    checkedValue="sv"
                    component={[Function]}
                    id="examLang-sv"
                    label="common.language.swe"
                    name="examLang"
                  >
                    <FieldInner
                      checkedValue="sv"
                      component={[Function]}
                      formik={
                        Object {
                          "dirty": false,
                          "errors": Object {},
                          "handleBlur": [Function],
                          "handleChange": [Function],
                          "handleReset": [Function],
                          "handleSubmit": [Function],
                          "initialValues": Object {
                            "certificateLang": "fi",
                            "email": "",
                            "examLang": "fi",
                            "firstName": "Carl-Erik",
                            "lastName": "Parkkonen-Testi",
                            "phoneNumber": "",
                            "postOffice": "HELSINKI",
                            "streetAddress": "Ateläniitynpolku 29 G",
                            "zip": "00100",
                          },
                          "isSubmitting": false,
                          "isValid": false,
                          "isValidating": false,
                          "registerField": [Function],
                          "resetForm": [Function],
                          "setError": [Function],
                          "setErrors": [Function],
                          "setFieldError": [Function],
                          "setFieldTouched": [Function],
                          "setFieldValue": [Function],
                          "setFormikState": [Function],
                          "setStatus": [Function],
                          "setSubmitting": [Function],
                          "setTouched": [Function],
                          "setValues": [Function],
                          "submitCount": 0,
                          "submitForm": [Function],
                          "touched": Object {},
                          "unregisterField": [Function],
                          "validate": undefined,
                          "validateField": [Function],
                          "validateForm": [Function],
                          "validateOnBlur": true,
                          "validateOnChange": true,
                          "validationSchema": ObjectSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_defaultDefault": [Function],
                            "_deps": Array [],
                            "_excludedEdges": Array [],
                            "_exclusive": Object {},
                            "_mutate": false,
                            "_nodes": Array [
                              "certificateLang",
                              "examLang",
                              "email",
                              "phoneNumber",
                              "postOffice",
                              "zip",
                              "streetAddress",
                              "lastName",
                              "firstName",
                            ],
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "object",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "fields": Object {
                              "certificateLang": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "email": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "required": false,
                                  "undefined": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "examLang": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "firstName": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "lastName": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "phoneNumber": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "invalid-phone-number": false,
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "postOffice": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "streetAddress": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "zip": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                            },
                            "tests": Array [],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "values": Object {
                            "certificateLang": "fi",
                            "email": "",
                            "examLang": "fi",
                            "firstName": "Carl-Erik",
                            "lastName": "Parkkonen-Testi",
                            "phoneNumber": "",
                            "postOffice": "HELSINKI",
                            "streetAddress": "Ateläniitynpolku 29 G",
                            "zip": "00100",
                          },
                        }
                      }
                      id="examLang-sv"
                      label="common.language.swe"
                      name="examLang"
                    >
                      <RadioButtonComponent
                        checkedValue="sv"
                        field={
                          Object {
                            "name": "examLang",
                            "onBlur": [Function],
                            "onChange": [Function],
                            "value": "fi",
                          }
                        }
                        form={
                          Object {
                            "dirty": false,
                            "errors": Object {},
                            "handleBlur": [Function],
                            "handleChange": [Function],
                            "handleReset": [Function],
                            "handleSubmit": [Function],
                            "initialValues": Object {
                              "certificateLang": "fi",
                              "email": "",
                              "examLang": "fi",
                              "firstName": "Carl-Erik",
                              "lastName": "Parkkonen-Testi",
                              "phoneNumber": "",
                              "postOffice": "HELSINKI",
                              "streetAddress": "Ateläniitynpolku 29 G",
                              "zip": "00100",
                            },
                            "isSubmitting": false,
                            "isValid": false,
                            "isValidating": false,
                            "registerField": [Function],
                            "resetForm": [Function],
                            "setError": [Function],
                            "setErrors": [Function],
                            "setFieldError": [Function],
                            "setFieldTouched": [Function],
                            "setFieldValue": [Function],
                            "setFormikState": [Function],
                            "setStatus": [Function],
                            "setSubmitting": [Function],
                            "setTouched": [Function],
                            "setValues": [Function],
                            "submitCount": 0,
                            "submitForm": [Function],
                            "touched": Object {},
                            "unregisterField": [Function],
                            "validateField": [Function],
                            "validateForm": [Function],
                            "validateOnBlur": true,
                            "validateOnChange": true,
                            "values": Object {
                              "certificateLang": "fi",
                              "email": "",
                              "examLang": "fi",
                              "firstName": "Carl-Erik",
                              "lastName": "Parkkonen-Testi",
                              "phoneNumber": "",
                              "postOffice": "HELSINKI",
                              "streetAddress": "Ateläniitynpolku 29 G",
                              "zip": "00100",
                            },
                          }
                        }
                        id="examLang-sv"
                        label="common.language.swe"
                      >
                        <radioButton
                          checkedValue="sv"
                          id="examLang-sv"
                          label="common.language.swe"
                          name="examLang"
                          onChange={[Function]}
                          value="fi"
                        >
                          <div
                            className="RadioButton "
                          >
                            <input
                              checked={false}
                              data-cy="radio-examLang-sv"
                              disabled={false}
                              id="examLang-sv"
                              name="examLang"
                              onChange={[Function]}
                              type="radio"
                              value="sv"
                            />
                            <label
                              className="RadioButtonLabel"
                              htmlFor="examLang-sv"
                            >
                              common.language.swe
                            </label>
                          </div>
                        </radioButton>
                      </RadioButtonComponent>
                    </FieldInner>
                  </FormikConnect(FieldInner)>
                </div>
              </RadioButtonGroup>
            </div>
            <div
              className="FormElement RadiobuttonGroup"
            >
              <RadioButtonGroup
                label="registration.form.certificateLang"
                value="fi"
              >
                <div>
                  <h3>
                    registration.form.certificateLang
                  </h3>
                  <FormikConnect(FieldInner)
                    checkedValue="fi"
                    component={[Function]}
                    id="certificateLang-fi"
                    label="common.language.fin"
                    name="certificateLang"
                  >
                    <FieldInner
                      checkedValue="fi"
                      component={[Function]}
                      formik={
                        Object {
                          "dirty": false,
                          "errors": Object {},
                          "handleBlur": [Function],
                          "handleChange": [Function],
                          "handleReset": [Function],
                          "handleSubmit": [Function],
                          "initialValues": Object {
                            "certificateLang": "fi",
                            "email": "",
                            "examLang": "fi",
                            "firstName": "Carl-Erik",
                            "lastName": "Parkkonen-Testi",
                            "phoneNumber": "",
                            "postOffice": "HELSINKI",
                            "streetAddress": "Ateläniitynpolku 29 G",
                            "zip": "00100",
                          },
                          "isSubmitting": false,
                          "isValid": false,
                          "isValidating": false,
                          "registerField": [Function],
                          "resetForm": [Function],
                          "setError": [Function],
                          "setErrors": [Function],
                          "setFieldError": [Function],
                          "setFieldTouched": [Function],
                          "setFieldValue": [Function],
                          "setFormikState": [Function],
                          "setStatus": [Function],
                          "setSubmitting": [Function],
                          "setTouched": [Function],
                          "setValues": [Function],
                          "submitCount": 0,
                          "submitForm": [Function],
                          "touched": Object {},
                          "unregisterField": [Function],
                          "validate": undefined,
                          "validateField": [Function],
                          "validateForm": [Function],
                          "validateOnBlur": true,
                          "validateOnChange": true,
                          "validationSchema": ObjectSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_defaultDefault": [Function],
                            "_deps": Array [],
                            "_excludedEdges": Array [],
                            "_exclusive": Object {},
                            "_mutate": false,
                            "_nodes": Array [
                              "certificateLang",
                              "examLang",
                              "email",
                              "phoneNumber",
                              "postOffice",
                              "zip",
                              "streetAddress",
                              "lastName",
                              "firstName",
                            ],
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "object",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "fields": Object {
                              "certificateLang": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "email": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "required": false,
                                  "undefined": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "examLang": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "firstName": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "lastName": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "phoneNumber": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "invalid-phone-number": false,
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "postOffice": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "streetAddress": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "zip": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                            },
                            "tests": Array [],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "values": Object {
                            "certificateLang": "fi",
                            "email": "",
                            "examLang": "fi",
                            "firstName": "Carl-Erik",
                            "lastName": "Parkkonen-Testi",
                            "phoneNumber": "",
                            "postOffice": "HELSINKI",
                            "streetAddress": "Ateläniitynpolku 29 G",
                            "zip": "00100",
                          },
                        }
                      }
                      id="certificateLang-fi"
                      label="common.language.fin"
                      name="certificateLang"
                    >
                      <RadioButtonComponent
                        checkedValue="fi"
                        field={
                          Object {
                            "name": "certificateLang",
                            "onBlur": [Function],
                            "onChange": [Function],
                            "value": "fi",
                          }
                        }
                        form={
                          Object {
                            "dirty": false,
                            "errors": Object {},
                            "handleBlur": [Function],
                            "handleChange": [Function],
                            "handleReset": [Function],
                            "handleSubmit": [Function],
                            "initialValues": Object {
                              "certificateLang": "fi",
                              "email": "",
                              "examLang": "fi",
                              "firstName": "Carl-Erik",
                              "lastName": "Parkkonen-Testi",
                              "phoneNumber": "",
                              "postOffice": "HELSINKI",
                              "streetAddress": "Ateläniitynpolku 29 G",
                              "zip": "00100",
                            },
                            "isSubmitting": false,
                            "isValid": false,
                            "isValidating": false,
                            "registerField": [Function],
                            "resetForm": [Function],
                            "setError": [Function],
                            "setErrors": [Function],
                            "setFieldError": [Function],
                            "setFieldTouched": [Function],
                            "setFieldValue": [Function],
                            "setFormikState": [Function],
                            "setStatus": [Function],
                            "setSubmitting": [Function],
                            "setTouched": [Function],
                            "setValues": [Function],
                            "submitCount": 0,
                            "submitForm": [Function],
                            "touched": Object {},
                            "unregisterField": [Function],
                            "validateField": [Function],
                            "validateForm": [Function],
                            "validateOnBlur": true,
                            "validateOnChange": true,
                            "values": Object {
                              "certificateLang": "fi",
                              "email": "",
                              "examLang": "fi",
                              "firstName": "Carl-Erik",
                              "lastName": "Parkkonen-Testi",
                              "phoneNumber": "",
                              "postOffice": "HELSINKI",
                              "streetAddress": "Ateläniitynpolku 29 G",
                              "zip": "00100",
                            },
                          }
                        }
                        id="certificateLang-fi"
                        label="common.language.fin"
                      >
                        <radioButton
                          checkedValue="fi"
                          id="certificateLang-fi"
                          label="common.language.fin"
                          name="certificateLang"
                          onChange={[Function]}
                          value="fi"
                        >
                          <div
                            className="RadioButton "
                          >
                            <input
                              checked={true}
                              data-cy="radio-certificateLang-fi"
                              disabled={false}
                              id="certificateLang-fi"
                              name="certificateLang"
                              onChange={[Function]}
                              type="radio"
                              value="fi"
                            />
                            <label
                              className="RadioButtonLabel"
                              htmlFor="certificateLang-fi"
                            >
                              common.language.fin
                            </label>
                          </div>
                        </radioButton>
                      </RadioButtonComponent>
                    </FieldInner>
                  </FormikConnect(FieldInner)>
                  <FormikConnect(FieldInner)
                    checkedValue="sv"
                    component={[Function]}
                    id="certificateLang-sv"
                    label="common.language.swe"
                    name="certificateLang"
                  >
                    <FieldInner
                      checkedValue="sv"
                      component={[Function]}
                      formik={
                        Object {
                          "dirty": false,
                          "errors": Object {},
                          "handleBlur": [Function],
                          "handleChange": [Function],
                          "handleReset": [Function],
                          "handleSubmit": [Function],
                          "initialValues": Object {
                            "certificateLang": "fi",
                            "email": "",
                            "examLang": "fi",
                            "firstName": "Carl-Erik",
                            "lastName": "Parkkonen-Testi",
                            "phoneNumber": "",
                            "postOffice": "HELSINKI",
                            "streetAddress": "Ateläniitynpolku 29 G",
                            "zip": "00100",
                          },
                          "isSubmitting": false,
                          "isValid": false,
                          "isValidating": false,
                          "registerField": [Function],
                          "resetForm": [Function],
                          "setError": [Function],
                          "setErrors": [Function],
                          "setFieldError": [Function],
                          "setFieldTouched": [Function],
                          "setFieldValue": [Function],
                          "setFormikState": [Function],
                          "setStatus": [Function],
                          "setSubmitting": [Function],
                          "setTouched": [Function],
                          "setValues": [Function],
                          "submitCount": 0,
                          "submitForm": [Function],
                          "touched": Object {},
                          "unregisterField": [Function],
                          "validate": undefined,
                          "validateField": [Function],
                          "validateForm": [Function],
                          "validateOnBlur": true,
                          "validateOnChange": true,
                          "validationSchema": ObjectSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_defaultDefault": [Function],
                            "_deps": Array [],
                            "_excludedEdges": Array [],
                            "_exclusive": Object {},
                            "_mutate": false,
                            "_nodes": Array [
                              "certificateLang",
                              "examLang",
                              "email",
                              "phoneNumber",
                              "postOffice",
                              "zip",
                              "streetAddress",
                              "lastName",
                              "firstName",
                            ],
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "object",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "fields": Object {
                              "certificateLang": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "email": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "required": false,
                                  "undefined": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "examLang": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "firstName": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "lastName": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "phoneNumber": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "invalid-phone-number": false,
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "postOffice": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "streetAddress": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "zip": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                            },
                            "tests": Array [],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "values": Object {
                            "certificateLang": "fi",
                            "email": "",
                            "examLang": "fi",
                            "firstName": "Carl-Erik",
                            "lastName": "Parkkonen-Testi",
                            "phoneNumber": "",
                            "postOffice": "HELSINKI",
                            "streetAddress": "Ateläniitynpolku 29 G",
                            "zip": "00100",
                          },
                        }
                      }
                      id="certificateLang-sv"
                      label="common.language.swe"
                      name="certificateLang"
                    >
                      <RadioButtonComponent
                        checkedValue="sv"
                        field={
                          Object {
                            "name": "certificateLang",
                            "onBlur": [Function],
                            "onChange": [Function],
                            "value": "fi",
                          }
                        }
                        form={
                          Object {
                            "dirty": false,
                            "errors": Object {},
                            "handleBlur": [Function],
                            "handleChange": [Function],
                            "handleReset": [Function],
                            "handleSubmit": [Function],
                            "initialValues": Object {
                              "certificateLang": "fi",
                              "email": "",
                              "examLang": "fi",
                              "firstName": "Carl-Erik",
                              "lastName": "Parkkonen-Testi",
                              "phoneNumber": "",
                              "postOffice": "HELSINKI",
                              "streetAddress": "Ateläniitynpolku 29 G",
                              "zip": "00100",
                            },
                            "isSubmitting": false,
                            "isValid": false,
                            "isValidating": false,
                            "registerField": [Function],
                            "resetForm": [Function],
                            "setError": [Function],
                            "setErrors": [Function],
                            "setFieldError": [Function],
                            "setFieldTouched": [Function],
                            "setFieldValue": [Function],
                            "setFormikState": [Function],
                            "setStatus": [Function],
                            "setSubmitting": [Function],
                            "setTouched": [Function],
                            "setValues": [Function],
                            "submitCount": 0,
                            "submitForm": [Function],
                            "touched": Object {},
                            "unregisterField": [Function],
                            "validateField": [Function],
                            "validateForm": [Function],
                            "validateOnBlur": true,
                            "validateOnChange": true,
                            "values": Object {
                              "certificateLang": "fi",
                              "email": "",
                              "examLang": "fi",
                              "firstName": "Carl-Erik",
                              "lastName": "Parkkonen-Testi",
                              "phoneNumber": "",
                              "postOffice": "HELSINKI",
                              "streetAddress": "Ateläniitynpolku 29 G",
                              "zip": "00100",
                            },
                          }
                        }
                        id="certificateLang-sv"
                        label="common.language.swe"
                      >
                        <radioButton
                          checkedValue="sv"
                          id="certificateLang-sv"
                          label="common.language.swe"
                          name="certificateLang"
                          onChange={[Function]}
                          value="fi"
                        >
                          <div
                            className="RadioButton "
                          >
                            <input
                              checked={false}
                              data-cy="radio-certificateLang-sv"
                              disabled={false}
                              id="certificateLang-sv"
                              name="certificateLang"
                              onChange={[Function]}
                              type="radio"
                              value="sv"
                            />
                            <label
                              className="RadioButtonLabel"
                              htmlFor="certificateLang-sv"
                            >
                              common.language.swe
                            </label>
                          </div>
                        </radioButton>
                      </RadioButtonComponent>
                    </FieldInner>
                  </FormikConnect(FieldInner)>
                  <FormikConnect(FieldInner)
                    checkedValue="en"
                    component={[Function]}
                    id="certificateLang-en"
                    label="common.language.eng"
                    name="certificateLang"
                  >
                    <FieldInner
                      checkedValue="en"
                      component={[Function]}
                      formik={
                        Object {
                          "dirty": false,
                          "errors": Object {},
                          "handleBlur": [Function],
                          "handleChange": [Function],
                          "handleReset": [Function],
                          "handleSubmit": [Function],
                          "initialValues": Object {
                            "certificateLang": "fi",
                            "email": "",
                            "examLang": "fi",
                            "firstName": "Carl-Erik",
                            "lastName": "Parkkonen-Testi",
                            "phoneNumber": "",
                            "postOffice": "HELSINKI",
                            "streetAddress": "Ateläniitynpolku 29 G",
                            "zip": "00100",
                          },
                          "isSubmitting": false,
                          "isValid": false,
                          "isValidating": false,
                          "registerField": [Function],
                          "resetForm": [Function],
                          "setError": [Function],
                          "setErrors": [Function],
                          "setFieldError": [Function],
                          "setFieldTouched": [Function],
                          "setFieldValue": [Function],
                          "setFormikState": [Function],
                          "setStatus": [Function],
                          "setSubmitting": [Function],
                          "setTouched": [Function],
                          "setValues": [Function],
                          "submitCount": 0,
                          "submitForm": [Function],
                          "touched": Object {},
                          "unregisterField": [Function],
                          "validate": undefined,
                          "validateField": [Function],
                          "validateForm": [Function],
                          "validateOnBlur": true,
                          "validateOnChange": true,
                          "validationSchema": ObjectSchema {
                            "_blacklist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "_conditions": Array [],
                            "_defaultDefault": [Function],
                            "_deps": Array [],
                            "_excludedEdges": Array [],
                            "_exclusive": Object {},
                            "_mutate": false,
                            "_nodes": Array [
                              "certificateLang",
                              "examLang",
                              "email",
                              "phoneNumber",
                              "postOffice",
                              "zip",
                              "streetAddress",
                              "lastName",
                              "firstName",
                            ],
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "object",
                            "_typeError": [Function],
                            "_whitelist": RefSet {
                              "list": Set {},
                              "refs": Map {},
                            },
                            "fields": Object {
                              "certificateLang": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "email": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "required": false,
                                  "undefined": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "examLang": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "firstName": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "lastName": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "phoneNumber": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "invalid-phone-number": false,
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "postOffice": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "streetAddress": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                              "zip": StringSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_deps": Array [],
                                "_exclusive": Object {
                                  "required": false,
                                },
                                "_mutate": false,
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "string",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "tests": Array [
                                  [Function],
                                  [Function],
                                ],
                                "transforms": Array [
                                  [Function],
                                ],
                              },
                            },
                            "tests": Array [],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "values": Object {
                            "certificateLang": "fi",
                            "email": "",
                            "examLang": "fi",
                            "firstName": "Carl-Erik",
                            "lastName": "Parkkonen-Testi",
                            "phoneNumber": "",
                            "postOffice": "HELSINKI",
                            "streetAddress": "Ateläniitynpolku 29 G",
                            "zip": "00100",
                          },
                        }
                      }
                      id="certificateLang-en"
                      label="common.language.eng"
                      name="certificateLang"
                    >
                      <RadioButtonComponent
                        checkedValue="en"
                        field={
                          Object {
                            "name": "certificateLang",
                            "onBlur": [Function],
                            "onChange": [Function],
                            "value": "fi",
                          }
                        }
                        form={
                          Object {
                            "dirty": false,
                            "errors": Object {},
                            "handleBlur": [Function],
                            "handleChange": [Function],
                            "handleReset": [Function],
                            "handleSubmit": [Function],
                            "initialValues": Object {
                              "certificateLang": "fi",
                              "email": "",
                              "examLang": "fi",
                              "firstName": "Carl-Erik",
                              "lastName": "Parkkonen-Testi",
                              "phoneNumber": "",
                              "postOffice": "HELSINKI",
                              "streetAddress": "Ateläniitynpolku 29 G",
                              "zip": "00100",
                            },
                            "isSubmitting": false,
                            "isValid": false,
                            "isValidating": false,
                            "registerField": [Function],
                            "resetForm": [Function],
                            "setError": [Function],
                            "setErrors": [Function],
                            "setFieldError": [Function],
                            "setFieldTouched": [Function],
                            "setFieldValue": [Function],
                            "setFormikState": [Function],
                            "setStatus": [Function],
                            "setSubmitting": [Function],
                            "setTouched": [Function],
                            "setValues": [Function],
                            "submitCount": 0,
                            "submitForm": [Function],
                            "touched": Object {},
                            "unregisterField": [Function],
                            "validateField": [Function],
                            "validateForm": [Function],
                            "validateOnBlur": true,
                            "validateOnChange": true,
                            "values": Object {
                              "certificateLang": "fi",
                              "email": "",
                              "examLang": "fi",
                              "firstName": "Carl-Erik",
                              "lastName": "Parkkonen-Testi",
                              "phoneNumber": "",
                              "postOffice": "HELSINKI",
                              "streetAddress": "Ateläniitynpolku 29 G",
                              "zip": "00100",
                            },
                          }
                        }
                        id="certificateLang-en"
                        label="common.language.eng"
                      >
                        <radioButton
                          checkedValue="en"
                          id="certificateLang-en"
                          label="common.language.eng"
                          name="certificateLang"
                          onChange={[Function]}
                          value="fi"
                        >
                          <div
                            className="RadioButton "
                          >
                            <input
                              checked={false}
                              data-cy="radio-certificateLang-en"
                              disabled={false}
                              id="certificateLang-en"
                              name="certificateLang"
                              onChange={[Function]}
                              type="radio"
                              value="en"
                            />
                            <label
                              className="RadioButtonLabel"
                              htmlFor="certificateLang-en"
                            >
                              common.language.eng
                            </label>
                          </div>
                        </radioButton>
                      </RadioButtonComponent>
                    </FieldInner>
                  </FormikConnect(FieldInner)>
                </div>
              </RadioButtonGroup>
            </div>
          </div>
          <p>
            registration.form.specialArrangements.info
          </p>
          <p>
            registration.form.summary.info
          </p>
          <button
            disabled={true}
            isRegistration={true}
            type="submit"
          >
            <button
              className="ParticipantButton undefined"
              disabled={true}
              type="submit"
            >
              registration.form.submit.button
            </button>
          </button>
        </form>
      </Component>
    </Form>
  </Formik>
</registrationForm>
`;
