name: YKI-frontend

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - '**.md'

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          # Note: does not cache node_modules
          # Use instead actions/cache explicitly if caching node_modules is desired
          cache: 'npm'
          cache-dependency-path: src/main/js/

      - name: Install NPM dependencies
        run: npm ci --prefix src/main/js/

      - name: Run tests
        run: npm test --prefix src/main/js/

  build:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven
        run: mvn clean package

      - uses: actions/cache@v3
        id: restore-build
        with:
          path: target
          key: ${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        id: restore-build
        with:
          path: target
          key: ${{ github.sha }}

      - name: Build and deploy Docker image
        shell: bash
        run: |
          export BASE_IMAGE="baseimage-fatjar-openjdk17:master"
          export ARTIFACT_NAME="yki-frontend"
          git clone https://github.com/Opetushallitus/ci-tools.git
          source ci-tools/common/setup-tools.sh
          mv target/yki-frontend-*.jar $DOCKER_BUILD_DIR/artifact/${ARTIFACT_NAME}.jar
          cp -vr src/main/resources/* $DOCKER_BUILD_DIR/config/
          ./ci-tools/common/pull-image.sh
          ./ci-tools/github-build/build-fatjar.sh $ARTIFACT_NAME
          ./ci-tools/github-build/upload-image.sh $ARTIFACT_NAME
          ./ci-tools/common/clean-docker-build-dir.sh
