name: YKI-frontend

on:
  workflow_dispatch:
  push:
    paths:
      - "**"
      - "!**/*.md"
    # Setting 'branches' has the side effect that just pushing tags does not start workflows.
    branches:
      - "**"

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  FRONTEND_DIR: ./src/main/js

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          # Note: does not cache node_modules
          # Use instead actions/cache explicitly if caching node_modules is desired
          cache: "npm"
          cache-dependency-path: src/main/js/

      - name: Install NPM dependencies
        run: npm ci --prefix src/main/js/

      - name: Run Jest tests
        run: npm test --prefix src/main/js/

      - name: Cache Cypress
        uses: actions/cache@v3
        id: cypress-cache
        with:
          path: "~/.cache/Cypress"
          key: ${{ runner.os }}-cypress-cache-${{ hashFiles('src/main/js/package.json') }}
      - name: Install Cypress
        uses: cypress-io/github-action@v4
        with:
          working-directory: ${{ env.FRONTEND_DIR }}
          runTests: false
        if: steps.cypress-cache.outputs.cache-hit != 'true'
      - name: Run Cypress tests
        uses: cypress-io/github-action@v4
        with:
          working-directory: ${{ env.FRONTEND_DIR }}
          install: false
          build: npm run build:ci
          start: npm run start:ci
          wait-on: "http://localhost:3000"
          command: npm run cypress:run
        timeout-minutes: 10

  build:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: "temurin"
          cache: "maven"

      - name: Build with Maven
        run: mvn clean package

      - uses: actions/cache@v3
        id: restore-build
        with:
          path: target
          key: ${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        id: restore-build
        with:
          path: target
          key: ${{ github.sha }}

      - name: Build and deploy Docker image
        shell: bash
        run: |
          export BASE_IMAGE="baseimage-fatjar-openjdk11:master"
          export ARTIFACT_NAME="yki-frontend"
          git clone https://github.com/Opetushallitus/ci-tools.git
          source ci-tools/common/setup-tools.sh
          mv target/yki-frontend-*.jar $DOCKER_BUILD_DIR/artifact/${ARTIFACT_NAME}.jar
          cp -vr src/main/resources/* $DOCKER_BUILD_DIR/config/
          ./ci-tools/common/pull-image.sh
          ./ci-tools/github-build/build-fatjar.sh $ARTIFACT_NAME
          ./ci-tools/github-build/upload-image.sh $ARTIFACT_NAME
          ./ci-tools/common/clean-docker-build-dir.sh
